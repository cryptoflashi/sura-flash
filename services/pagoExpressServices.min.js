if(nullObjectValidate(services)){
	var services = angular.module('services', ['servicesRest']);
}


services.service('pagoExpressService',['$q', 'pagoExpressRest', function($q, pagoExpressRest){
	this.showPayPendingReceipts = true;
	this.idPayment = null;
	this.information = null;
	this.payment = null;
	this.token = null;
	this.back = null;
	
	
	this.searchPortfolio = function(query){
		var promise = $q.defer();

		var req = {
			companyCode : query.companyCode, 
		};
		
		if(query.incomeType == "DOCUMENT"){
			req.document = query.document;
			req.documentType = query.documentType;
    	} else {
    		req.reference = query.invoice;
    	}
				
		var search = {
			Key : this.token,
			Portfolio : req
		};
				
		pagoExpressRest.searchPortfolio(search)/*.then(
			function mySucces(response) {
				promise.resolve(response.data);
			}, 
			function myError(response) {
				return promise.reject(response);
			}
		);*/
		
		.success(
			function(result) {			
			  promise.resolve(result);
			}
		)
		.error(
			function(error, status){
				return promise.reject(error);
			}
		);

		return promise.promise;
	};
	
	
	this.pay = function(payment){
		var promise = $q.defer();
		
		pagoExpressRest.pay(payment)
		.success(
			function(result) {			
			  promise.resolve(result);
			}
		)
		.error(
			function(error, status){
				return promise.reject(error);
			}
		);

		return promise.promise;
	};
	
	this.usertokens = function(user){
		var promise = $q.defer();
		
		pagoExpressRest.usertokens(user)
		.success(
			function(result) {			
			  promise.resolve(result);
			}
		)
		.error(
			function(error, status){
				return promise.reject(error);
			}
		);

		return promise.promise;
	};
	
	this.paymentReceipt = function(payment){
		var promise = $q.defer();
		
		pagoExpressRest.paymentReceipt(payment)
		.success(
			function(result) {			
			  promise.resolve(result);
			}
		)
		.error(
			function(error, status){
				return promise.reject(status);
			}
		);

		return promise.promise;
	};
	
	this.downloadPaymentReceipt = function(payment){
		var promise = $q.defer();
		
		pagoExpressRest.downloadPaymentReceipt(payment)
		.success(
			function(result) {			
			  promise.resolve(result);
			}
		)
		.error(
			function(error, status){
				return promise.reject(error);
			}
		);

		return promise.promise;
	};
	
	this.paymentVoucher = function(payment){
		var promise = $q.defer();
		
		pagoExpressRest.paymentVoucher(payment)
		.success(
			function(result) {			
			  promise.resolve(result);
			}
		)
		.error(
			function(error, status){
				return promise.reject(error);
			}
		);

		return promise.promise;
	};
	
	
	this.paymentHistory = function(paymentStatus){
		var promise = $q.defer();
		
		pagoExpressRest.paymentHistory(paymentStatus)
		.success(
			function(result) {			
			  promise.resolve(result);
			}
		)
		.error(
			function(error, status){
				return promise.reject(error);
			}
		);

		return promise.promise;
	};
}]);